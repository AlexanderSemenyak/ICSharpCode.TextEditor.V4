{
   "@name": "js",
   "@folding": "Code",
  "Extensions": [
  "js"
  ],
   "Properties": {
      "Property": {
         "@name": "LineComment",
         "@value": "//"
      }
   },
   "Digits": {
      "@name": "Digits",
      "@bold": "false",
      "@italic": "false",
      "@color": "DarkBlue"
   },
   "RuleSets": {
      "RuleSet": {
         "@ignorecase": "false",
         "Delimiters": "=!><+-/*%&|^~.}{,;][?:",
         "Span": [
            {
               "@name": "LineComment",
               "@bold": "false",
               "@italic": "false",
               "@color": "DarkSlateGray",
               "@stopateol": "true",
               "Begin": "//"
            },
            {
               "@name": "BlockComment",
               "@bold": "false",
               "@italic": "false",
               "@color": "DarkSlateGray",
               "@stopateol": "false",
               "Begin": "/*",
               "End": "*/"
            },
            {
               "@name": "String",
               "@bold": "false",
               "@italic": "false",
               "@color": "Sienna",
               "@stopateol": "false",
               "@escapecharacter": "\\",
               "Begin": "\"",
               "End": "\""
            },
            {
               "@name": "Character",
               "@bold": "false",
               "@italic": "false",
               "@color": "Sienna",
               "@stopateol": "true",
               "@escapecharacter": "\\",
               "Begin": "'",
               "End": "'"
            }
         ],
         "KeyWords": [
            {
               "@name": "JavaScriptKeyWords",
               "@bold": "false",
               "@italic": "false",
               "@color": "Blue",
               "Key": [
                  {
                     "@word": "break"
                  },
                  {
                     "@word": "continue"
                  },
                  {
                     "@word": "delete"
                  },
                  {
                     "@word": "else"
                  },
                  {
                     "@word": "for"
                  },
                  {
                     "@word": "function"
                  },
                  {
                     "@word": "if"
                  },
                  {
                     "@word": "in"
                  },
                  {
                     "@word": "new"
                  },
                  {
                     "@word": "return"
                  },
                  {
                     "@word": "this"
                  },
                  {
                     "@word": "typeof"
                  },
                  {
                     "@word": "var"
                  },
                  {
                     "@word": "void"
                  },
                  {
                     "@word": "while"
                  },
                  {
                     "@word": "with"
                  },
                  {
                     "@word": "abstract"
                  },
                  {
                     "@word": "boolean"
                  },
                  {
                     "@word": "byte"
                  },
                  {
                     "@word": "case"
                  },
                  {
                     "@word": "catch"
                  },
                  {
                     "@word": "char"
                  },
                  {
                     "@word": "class"
                  },
                  {
                     "@word": "const"
                  },
                  {
                     "@word": "debugger"
                  },
                  {
                     "@word": "default"
                  },
                  {
                     "@word": "do"
                  },
                  {
                     "@word": "double"
                  },
                  {
                     "@word": "enum"
                  },
                  {
                     "@word": "export"
                  },
                  {
                     "@word": "extends"
                  },
                  {
                     "@word": "final"
                  },
                  {
                     "@word": "finally"
                  },
                  {
                     "@word": "float"
                  },
                  {
                     "@word": "goto"
                  },
                  {
                     "@word": "implements"
                  },
                  {
                     "@word": "import"
                  },
                  {
                     "@word": "instanceof"
                  },
                  {
                     "@word": "int"
                  },
                  {
                     "@word": "interface"
                  },
                  {
                     "@word": "long"
                  },
                  {
                     "@word": "native"
                  },
                  {
                     "@word": "package"
                  },
                  {
                     "@word": "private"
                  },
                  {
                     "@word": "protected"
                  },
                  {
                     "@word": "public"
                  },
                  {
                     "@word": "short"
                  },
                  {
                     "@word": "static"
                  },
                  {
                     "@word": "super"
                  },
                  {
                     "@word": "switch"
                  },
                  {
                     "@word": "synchronized"
                  },
                  {
                     "@word": "throw"
                  },
                  {
                     "@word": "throws"
                  },
                  {
                     "@word": "transient"
                  },
                  {
                     "@word": "try"
                  },
                  {
                     "@word": "volatile"
                  }
               ]
            },
            {
               "@name": "JavaScriptIntrinsics",
               "@bold": "false",
               "@italic": "false",
               "@color": "Blue",
               "Key": [
                  {
                     "@word": "Array"
                  },
                  {
                     "@word": "Boolean"
                  },
                  {
                     "@word": "Date"
                  },
                  {
                     "@word": "Function"
                  },
                  {
                     "@word": "Global"
                  },
                  {
                     "@word": "Math"
                  },
                  {
                     "@word": "Number"
                  },
                  {
                     "@word": "Object"
                  },
                  {
                     "@word": "RegExp"
                  },
                  {
                     "@word": "String"
                  }
               ]
            },
            {
               "@name": "JavaScriptLiterals",
               "@bold": "false",
               "@italic": "false",
               "@color": "Blue",
               "Key": [
                  {
                     "@word": "false"
                  },
                  {
                     "@word": null
                  },
                  {
                     "@word": "true"
                  },
                  {
                     "@word": "NaN"
                  },
                  {
                     "@word": "Infinity"
                  }
               ]
            },
            {
               "@name": "JavaScriptLiterals",
               "@bold": "false",
               "@italic": "false",
               "@color": "Blue",
               "Key": {
                  "@word": ""
               }
            },
            {
               "@name": "JavaScriptGlobalFunctions",
               "@bold": "false",
               "@italic": "false",
               "@color": "Blue",
               "Key": [
                  {
                     "@word": "eval"
                  },
                  {
                     "@word": "parseInt"
                  },
                  {
                     "@word": "parseFloat"
                  },
                  {
                     "@word": "escape"
                  },
                  {
                     "@word": "unescape"
                  },
                  {
                     "@word": "isNaN"
                  },
                  {
                     "@word": "isFinite"
                  }
               ]
            }
         ]
      }
   }
}
